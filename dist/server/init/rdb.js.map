{"version":3,"sources":["init/rdb.js"],"names":[],"mappings":"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","file":"init/rdb.js","sourcesContent":["import r from 'rethinkdb';\nimport async from 'async';\nimport debug from 'debug';\nimport _ from 'lodash';\n\nlet logerror = debug('transac:error')\n  , loginfo = debug('transac:info');\n\nexport default {init: init};\n\nlet tables = {\n    transacs: 'id'\n};\n\nfunction init(params, resources){\n\n  function initConnection(cb){\n    r.connect(params, (err, conn) => {\n      if(err) return cb(err);\n      conn.on('error', err => {\n        logerror(\"RethinkDB connection lost\");\n        logerror(err);\n        conn.reconnect({noreplyWait: false}, (err, conn) => {\n          if(err) return logerror(err);\n          loginfo(\"RethinkDB has reconnected\");\n          resources.conn = conn;\n        });\n      });\n      loginfo(`RethinkDB connected to database '${params.db}'`);\n      cb(null, conn);\n    })\n  }\n\n  function dbCreate(conn, cb){\n    r.dbList().run(conn, (err, result) => {\n      if(err) return cb(err);\n      if(_.contains(result, params.db))return setImmediate(cb, null, conn);\n      r.dbCreate(params.db).run(conn, (err, result) => {\n        if(err) return cb(err);\n        loginfo(`RethinkDB database ${params.db} created`);\n        cb(null, conn);\n      })\n    });\n  }\n\n  function tablesCreate(conn, cb){\n    async.map(_.pairs(tables), tableCreate(conn), err => { cb(err, conn) });\n  }\n\n  function tableCreate(conn){\n    return function(x, cb){\n      let [table, index] = x;\n      r.db(params.db).tableList().run(conn, (err, result) => {\n        if(err) return cb(err);\n        if(_.contains(result, table))return setImmediate(cb);\n        r.db(params.db).tableCreate(table, {primaryKey: index}).run(conn, err => {\n          if(err) return cb(err);\n          loginfo(`RethinkDB database '${params.db}' table '${table}' created`);\n          cb();\n        });\n      });\n    }\n  }\n\n  return function(cb){\n    async.waterfall([initConnection, dbCreate, tablesCreate], (err, conn) => {\n      cb(err, conn);\n    });\n  }\n\n}\n"],"sourceRoot":"/home/redpelicans/transac2/src/server"}